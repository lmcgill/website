points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, type='l', col='blue')
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, type='l', col='blue')
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, type='l', col='blue')
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
plot(1:12, d13C.ssl)
# Proportions of prey in each diet item
prey.1.diet = 1
prey.2.diet = 0
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #+ offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
plot(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
# Proportions of prey in each diet item
prey.1.diet = 1
prey.2.diet = 0
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #+ offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
plot(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19)
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
# Proportions of prey in each diet item
prey.1.diet = 0
prey.2.diet = 1
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] - offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
# Proportions of prey in each diet item
prey.1.diet = 0
prey.2.diet = 1
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
prey.1.diet = 0
prey.2.diet = 1
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, d13C.ssl, xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
length(yvals)
ssl$Distance.from.tip..cm.[local.min[6]]
ssl$Distance.from.tip..cm.[local.min[5]]
plot((ssl$Distance.from.tip..cm.), rev(ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), rev(ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
yvals
local.max = which(diff(sign(diff(rev(ssl$d13C))))==-2)+1
local.max
c(8,21,32,42,54) - 1
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13), col="white")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]-1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13), col="white")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13), col="white")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]], to=ssl$Distance.from.tip..cm.[local.min[5]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5]], to=ssl$Distance.from.tip..cm.[local.min[4]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]], to=ssl$Distance.from.tip..cm.[local.min[3]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]], to=ssl$Distance.from.tip..cm.[local.min[2]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]], to=ssl$Distance.from.tip..cm.[local.min[1]+1], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13), col="white")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13), col="white")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
# Proportions of prey in each diet item
prey.1.diet = 0
prey.2.diet = 1
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
# Proportions of prey in each diet item
prey.1.diet = 1
prey.2.diet = 0
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #+ offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.7,0.65,0.5,0.35,0.2 )
length(prey.1.diet)
prey.2.diet = 1-prey.1.diet
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.75, 0.7,0.65,0.5,0.35,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] - offset.ssl
}
plot(1:length(d13C.ssl), d13C.ssl)
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.75, 0.7,0.65,0.5,0.35,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
prey.2.diet
warnings()
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.75, 0.7,0.65,0.5,0.35,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet[i] * d13C.prey1[i]) + (prey.2.diet[i] * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
# Proportions of prey in each diet item
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.75, 0.7,0.65,0.5,0.35,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet[i] * d13C.prey1[i]) + (prey.2.diet[i] * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
prey
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")))
# Proportions of prey in each diet item
prey.1.diet = 1
prey.2.diet = 0
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #+ offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -13))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="blue")
# Proportions of prey in each diet item
prey.1.diet = 0
prey.2.diet = 1
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet * d13C.prey1[i]) + (prey.2.diet * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="red")
# Simulate data for each prey item
for (i in 1:13){
prey.densities[, i] = rnorm(50000, mean=prey[i,2], sd=prey[i,3])
}
# Start plotting prey items
ggplot(prey.densities, aes(x=Af)) + geom_density()
prey
# Proportions of prey in each diet item
prey.1.diet = c(0.2,0.35,0.5,0.65,0.7,0.75,0.75, 0.7,0.65,0.5,0.35,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet[i] * d13C.prey1[i]) + (prey.2.diet[i] * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
prey
prey.1.diet = c(0.2,0.2,0.2,0.2,0.2,0.2,0.8, 0.8,0.8,0.8,0.8,0.8)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet[i] * d13C.prey1[i]) + (prey.2.diet[i] * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
prey.1.diet = c(0.2,0.2,0.2,0.2,0.8,0.8,0.8, 0.8,0.8,0.2,0.2,0.2)
prey.2.diet = 1-prey.1.diet
d13C.ssl = vector()
for (i in 1:12){
d13C.ssl[i] = (prey.1.diet[i] * d13C.prey1[i]) + (prey.2.diet[i] * d13C.prey2[i])
d13C.ssl[i] = d13C.ssl[i] #- offset.ssl
}
plot((ssl$Distance.from.tip..cm.), (ssl$d13C), type="l", xlab='Distance from Tip',
ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), ylim=c(-19, -12))
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[6]-1], to=ssl$Distance.from.tip..cm.[local.min[5]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[5] -1], to=ssl$Distance.from.tip..cm.[local.min[4]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[4]-1], to=ssl$Distance.from.tip..cm.[local.min[3]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[3]-1], to=ssl$Distance.from.tip..cm.[local.min[2]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
yvals = seq(from=ssl$Distance.from.tip..cm.[local.min[2]-1], to=ssl$Distance.from.tip..cm.[local.min[1]], length.out=12)
points(yvals, rev(d13C.ssl), xlab="Month", ylab=expression(paste("Stellar Sea Lion ", delta^13, "C")), pch=19, col="green")
head(prey.densities)
head(t(prey.densities))
setwd("~Desktop/website")
getwd()
setwd(""/Users/lillianmcgill/Desktop/website")
""
setwd("/Users/lillianmcgill/Desktop/website")
library(blogdown)
build_site()
serve_site()
library(blogdown)
hugo_version
hugo_version()
serve_site()
build_site()
build_site()
build_site()
build_site()
serve_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
serve_site()
library(blogdown)
build_site()
library(blogdown)
serve_site()
serve_site()
build_site()
serve_site()
build_site()
library(blogdown)
serve_site()
build_site()
serve_site()
build_site()
library(blogdown)
build_site()
serve_site()
build_site()
build_site()
serve_site()
serve_site()
build_site()
blogdown::hugo_build()
blogdown::build_site()
blogdown::serve_site()
build_site()
build_site()
serve_site()
serve_site()
build_site()
library(blogdown)
build_site()
blogdown::build_site(local=TRUE)
blogdown::build_site(local=TRUE)
build_site()
serve_site()
library(blogdown)
bulid_site()
blogdown::build_site()
blodgown::serve_site()
serve_site()
